| **Implementazione**   | **Caratteristiche principali**                                           | **Quando usarla**                                                            |
|------------------------|-------------------------------------------------------------------------|------------------------------------------------------------------------------|
| **`HashMap`**          | - Usa una tabella hash.                                                | Quando serve alta velocità per inserimento, ricerca e rimozione.             |
|                        | - Non garantisce ordine.                                               |                                                                              |
| **`LinkedHashMap`**    | - Estende `HashMap`.                                                   | Quando serve mantenere l'ordine di inserimento delle coppie chiave-valore.   |
|                        | - Mantiene l'ordine di inserimento.                                    |                                                                              |
| **`TreeMap`**          | - Implementa una mappa ordinata (usando un albero rosso-nero).         | Quando serve un ordine naturale delle chiavi o un ordine personalizzato.     |
|                        | - Le chiavi sono ordinate in modo naturale o tramite un `Comparator` personalizzato. |                                                                              |
| **`Hashtable`**        | - Simile a `HashMap` ma sincronizzata (thread-safe).                   | Quando serve una mappa sincronizzata (ma è meno usata nelle applicazioni moderne). |
| **`ConcurrentHashMap`** | - Versione thread-safe di `HashMap` ottimizzata per accessi concorrenti. | Quando serve gestire una mappa in ambienti multi-thread con prestazioni ottimali. |
